const axios = require("axios");

module.exports.config = {
  name: "gpt",
  version: "1.0.0",
  hasPermission: 0,
  credits: "Ho√†ng Qu√¢n/ ƒë·ªïi c√°i djt con c·ª• nh√† m",
  description: "Tr√≤ chuy·ªán v·ªõi ChatGPT qua API",
  commandCategory: "AI",
  usages: "[prompt]",
  cooldowns: 2
};

// H√†m g·ªçi API ChatGPT c·ªßa b·∫°n
async function callGPT(prompt) {
  try {
    const res = await axios.get(`http://localhost:8899/gpt?text=${encodeURIComponent(prompt)}`);
    if (res.data?.success) {
      return { data: res.data };
    } else {
      return { error: true, message: res.data.message || "Kh√¥ng c√≥ ph·∫£n h·ªìi t·ª´ GPT." };
    }
  } catch (err) {
    return { error: true, message: "Kh√¥ng th·ªÉ g·ªçi API GPT." };
  }
}

module.exports.run = async function ({ api, event, args }) {
  const { threadID, messageID, senderID } = event;
  const prompt = args.join(" ");

  if (!prompt) {
    return api.sendMessage("‚ùå B·∫°n ch∆∞a nh·∫≠p n·ªôi dung ƒë·ªÉ h·ªèi.", threadID, messageID);
  }

  if (!global.gptChat) global.gptChat = new Map();
  global.gptChat.set(threadID, senderID);

  api.sendMessage({ body: "ü§ñ ƒêang h·ªèi GPT...", typing: true }, threadID);

  const { data, error, message } = await callGPT(prompt).catch(err => {
    console.error("‚ùå GPT Error:", err);
    return { error: true, message: "GPT g·∫∑p l·ªói x·ª≠ l√Ω." };
  });

  if (error) return api.sendMessage(message || "GPT kh√¥ng ph·∫£n h·ªìi.", threadID, messageID);
  return api.sendMessage(`ü§ñ GPT: ${data.reply}`, threadID, messageID);
};

module.exports.event = async function ({ api, event }) {
  try {
    const { threadID, messageID, senderID, body, mentions } = event;
    const send = (msg) => api.sendMessage(msg, threadID, messageID);

    // Fix l·ªói: ƒë·∫£m b·∫£o gptChat t·ªìn t·∫°i
    if (!global.gptChat) global.gptChat = new Map();
    if (!global.gptChat.has(threadID)) return;

    const botID = api.getCurrentUserID();
    if (!mentions || !Object.keys(mentions).includes(botID.toString())) return;
    if (!body) return;

    const prompt = body.replace(/@.+?\s?/, "").trim();
    if (prompt.length < 1) return;

    console.log(`[GPT ASK] ${prompt}`);
    api.sendMessage({ body: "", typing: true }, threadID);

    const { data, error, message } = await callGPT(prompt).catch(err => {
      console.error("‚ùå GPT Event Error:", err);
      return { error: true, message: "GPT g·∫∑p l·ªói x·ª≠ l√Ω." };
    });

    if (error) return send(message || "GPT kh√¥ng ph·∫£n h·ªìi.");
    return send(`ü§ñ GPT: ${data.reply}`);
  } catch (err) {
    console.error("‚ùå L·ªói ngo√†i event GPT:", err);
  }
};
