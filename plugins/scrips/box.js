module.exports.config = {
  name: "box",
  version: "1.0.1", // Updated version
  hasPermssion: 0,
  credits: "HoaÃÄng",
  description: "C√°c c√†i ƒë·∫∑t c·ªßa nh√≥m chat.",
  commandCategory: "box",
  usages: "[name/emoji/info/id]", // Added "id" option
  cooldowns: 1,
  dependencies: ["request", "fs-extra"]
};

module.exports.run = async ({ api, event, args }) => {
  const fs = require("fs-extra");
  const request = require("request");

  if (args.length == 0) {
    return api.sendMessage(
      `B·∫°n c√≥ th·ªÉ d√πng:\n/box emoji [icon]\n\n/box name [t√™n box c·∫ßn ƒë·ªïi]\n\n/box info => To√†n b·ªô th√¥ng tin c·ªßa nh√≥m !\n\n/box id => L·∫•y ID c·ªßa nh√≥m`,
      event.threadID,
      event.messageID
    );
  }

  if (args[0] == "name") {
    var content = args.join(" ");
    var c = content.slice(4, 99) || event.messageReply.body;
    api.setTitle(`${c} `, event.threadID);
  }

  if (args[0] == "emoji") {
    const name = args[1] || event.messageReply.body;
    api.changeThreadEmoji(name, event.threadID);
  }

  if (args[0] == "info") {
    var threadInfo = await api.getThreadMain(event.threadID);
    let threadMem = threadInfo.participantIDs.length;
    var gendernam = [];
    var gendernu = [];
    var nope = [];
    for (let z in threadInfo.userInfo) {
      var gioitinhone = threadInfo.userInfo[z].gender;
      var nName = threadInfo.userInfo[z].name;

      if (gioitinhone == "MALE") {
        gendernam.push(z + gioitinhone);
      } else if (gioitinhone == "FEMALE") {
        gendernu.push(gioitinhone);
      } else {
        nope.push(nName);
      }
    }
    var nam = gendernam.length;
    var nu = gendernu.length;
    let qtv = threadInfo.adminIDs.length;
    let sl = threadInfo.messageCount;
    let icon = threadInfo.emoji;
    let threadName = threadInfo.threadName;
    let id = threadInfo.threadID;
    var listad = "";
    var qtv2 = threadInfo.adminIDs;
    for (let i = 0; i < qtv2.length; i++) {
      const infu = await api.getUserInfoMain(qtv2[i].id);
      const name = infu[qtv2[i].id].name;
      listad += "‚Ä¢" + name + "\n";
    }
    let sex = threadInfo.approvalMode;
    var pd = sex == false ? "t·∫Øt" : sex == true ? "b·∫≠t" : "Kh";
    var pdd = sex == false ? "‚ùé" : sex == true ? "‚úÖ" : "‚≠ï";
    var callback = () =>
      api.sendMessage(
        {
          body: `T√™n box: ${threadName}\nID Box: ${id}\n${pdd} Ph√™ duy·ªát: ${pd}\nEmoji: ${icon || "Like "}\n-Th√¥ng tin:\nT·ªïng ${threadMem} th√†nh vi√™n\nüë®‚Äçü¶∞Nam: ${nam} th√†nh vi√™n \nüë©‚Äçü¶∞N·ªØ: ${nu} th√†nh vi√™n\n\nüïµÔ∏è‚Äç‚ôÇÔ∏èV·ªõi ${qtv} qu·∫£n tr·ªã vi√™n g·ªìm:\n${listad}\nT·ªïng s·ªë tin nh·∫Øn: ${sl} tin.`,
          attachment: fs.createReadStream(__dirname + "/cache/1.png")
        },
        event.threadID,
        () => fs.unlinkSync(__dirname + "/cache/1.png"),
        event.messageID
      );
    return request(encodeURI(`${threadInfo.imageSrc}`))
      .pipe(fs.createWriteStream(__dirname + "/cache/1.png"))
      .on("close", () => callback());
  }

  if (args[0] == "id") {
    api.sendMessage(`ID c·ªßa nh√≥m l√†: ${event.threadID}`, event.threadID, event.messageID);
  }
};
